# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'open.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QEventLoop, QTimer
from PyQt5.QtWidgets import QFileDialog

from graph import subway_graph
from graph.subway_graph import init_graph_readfile

G = subway_graph.SubwayGraph()


# 重定向输出
class EmittingStr(QtCore.QObject):
    textWritten = QtCore.pyqtSignal(str)  # 定义一个发送str的信号

    def write(self, text):
        self.textWritten.emit(str(text))
        loop = QEventLoop()
        QTimer.singleShot(1000, loop.quit)
        loop.exec_()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(734, 471)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(510, 55, 111, 31))
        self.label.setObjectName("label")
        self.pushButton_G = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_G.setGeometry(QtCore.QRect(610, 50, 93, 28))
        self.pushButton_G.setObjectName("pushButton_G")
        self.pushButton_F = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_F.setGeometry(QtCore.QRect(610, 120, 93, 28))
        self.pushButton_F.setObjectName("pushButton_F")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(510, 120, 111, 31))
        self.label_2.setObjectName("label_2")
        self.pushButton_L = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_L.setGeometry(QtCore.QRect(610, 190, 93, 28))
        self.pushButton_L.setObjectName("pushButton_L")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(510, 190, 111, 31))
        self.label_3.setObjectName("label_3")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(63, 46, 411, 341))
        self.textEdit.setObjectName("textEdit")
        self.pushButton_Start = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Start.setGeometry(QtCore.QRect(510, 250, 93, 28))
        self.pushButton_Start.setObjectName("pushButton_Start")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 734, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "打开图文件"))
        self.pushButton_G.setText(_translate("MainWindow", "浏览"))
        self.pushButton_F.setText(_translate("MainWindow", "浏览"))
        self.label_2.setText(_translate("MainWindow", "打开负载文件"))
        self.pushButton_L.setText(_translate("MainWindow", "浏览"))
        # TODO 粒子不需要读文件，先改成手动输入吧，后面再丰富 @song
        self.label_3.setText(_translate("MainWindow", "打开粒子文件"))
        self.pushButton_Start.setText(_translate("MainWindow", "开始运行"))

        self.pushButton_G.clicked.connect(self.showDialog1)
        self.pushButton_F.clicked.connect(self.showDialog2)
        self.pushButton_L.clicked.connect(self.showDialog3)
        self.pushButton_Start.clicked.connect(read_txt_test)

    def showDialog1(self):
        filename_G = QFileDialog.getOpenFileName(self, 'Open file', '.')
        if filename_G[0]:
            # TODO 需要加一个判断数据格式，如果不正确，弹窗提示错误 @zhou
            G.load_edges(filename_G[0])
            print(G.edges)

            f = open(filename_G[0], 'r')
            with f:
                data = f.read()
                print("read node list file:", data)
                self.outputWritten(data)

    def showDialog2(self):
        filename_F = QFileDialog.getOpenFileName(self, 'Open file', '.')
        if filename_F[0]:
            G.init_load_by_file(filename_F[0])
            print(G.node_load)
            f = open(filename_F[0], 'r')
            with f:
                data = f.read()
                print("read load list file:", data)
                self.outputWritten(data)

    # TODO 不需要这个读取文件 @song
    def showDialog3(self):
        filename_L = QFileDialog.getOpenFileName(self, 'Open file', '.')
        if filename_L[0]:
            f = open(filename_L[0], 'r')
            with f:
                data = f.read()
                self.textEdit.setText(data)

    def outputWritten(self, text):
        # self.textEdit.clear()
        cursor = self.textEdit.textCursor()
        cursor.movePosition(QtGui.QTextCursor.End)
        cursor.insertText(text)
        self.textEdit.setTextCursor(cursor)
        self.textEdit.ensureCursorVisible()


def read_txt_test():
    G.set_params(0.5, 0)
    G.set_granule_num(20)
    print(G.node_num)
    init_graph_readfile(G)
